# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Make application-xx.yaml
      run: |
        cd ./src/main/resources
        touch ./application-jasypt.yml
        echo "${{ secrets.APPLICATION_JASYPT }}" > ./application-jasypt.yml
        touch ./application-jwt.yml
        echo "${{ secrets.APPLICATION_JWT }}" > ./application-jwt.yml
        touch ./application-s3.yml
        echo "${{ secrets.APPLICATION_S3 }}" > ./application-s3.yml

      shell: bash

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean build -x test

    - name: Docker build & push to docker repo
      run: |
        docker login -u ${{ secrets.DOCKER_NAME }} -p ${{ secrets.DOCKER_PW }}
        docker build -f Dockerfile -t ${{ secrets.DOCKER_NAME }}/junckit .
        docker push ${{ secrets.DOCKER_NAME }}/junckit

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      id: deploy
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        envs: GITHUB_SHA
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_NAME }}/junckit
          docker-compose up -d
          docker image prune -f